{"version":3,"sources":["routers/Home.js","components/NewClients.js","components/DropZone.js","routers/Try.js","App.js","index.js"],"names":["Home","id","params","s","m","offset","className","icon","faUserTie","size","faDatabase","to","faFileAlt","href","download","faFileUpload","faListOl","accordion","expanded","header","faCogs","node","faQuestionCircle","faAddressBook","faThumbsDown","faUsers","target","rel","faTelegram","faAt","NewClients","props","loads","deleteLoad","useState","idLoadForDelete","setIdLoadForDelete","actions","modal","onClick","flat","waves","bottomSheet","fixedFooter","map","load","index","parseInt","status","active","color","window","M","Collapsible","getInstance","document","querySelector","close","Modal","getElementById","open","faTrashAlt","clients","length","centered","responsive","data-field","client","row_number","inn","priority","DropZone","readExcel","onDrop","useCallback","acceptedFiles","useDropzone","accept","maxFiles","getRootProps","getInputProps","Try","setLoads","isLoading","setIsLoading","updater","getNewClients","uploadedClients","a","localStorage","getItem","setItem","sha256","Date","toString","userHash","getClients","fetch","method","headers","body","JSON","stringify","ok","Error","console","error","message","response","json","data","calc_status","setInterval","clearInterval","i","filter","toast","html","displayLength","classes","useEffect","l","xl","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","wb","XLSX","read","result","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","newData","forEach","Number","isInteger","push","onerror","then","faList","App","alignLinks","brand","centerChildren","menuIcon","faBars","fixed","sidenav","subheader","divider","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec202c2a.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Container, Row, Col, Collection, CollectionItem,Collapsible, CollapsibleItem } from 'react-materialize'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDatabase, faFileAlt, faListOl, faFileUpload, faCogs, faUsers, faAddressBook, faThumbsDown, faQuestionCircle, faUserTie, faAt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTelegram } from '@fortawesome/free-brands-svg-icons'\r\nimport Particles from 'react-particles-js'\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <section id='greeting'>\r\n        <Particles \r\n          params={{\r\n            \"particles\": {\r\n              \"number\": {\r\n                \"value\": 50,\r\n                \"density\": {\r\n                  \"enable\": true,\r\n                  \"value_area\": 800\r\n                }\r\n              },\r\n              \"color\": {\r\n                \"value\": \"#000000\"\r\n              },\r\n              \"shape\": {\r\n                \"type\": \"image\",\r\n                \"stroke\": {\r\n                  \"width\": 0,\r\n                  \"color\": \"#000000\"\r\n                },\r\n                \"polygon\": {\r\n                  \"nb_sides\": 3\r\n                },\r\n                \"image\": {\r\n                  \"src\": \"/images/client.svg\",\r\n                  \"width\": 100,\r\n                  \"height\": 100\r\n                }\r\n              },\r\n              \"opacity\": {\r\n                \"value\": 1,\r\n                \"random\": false,\r\n                \"anim\": {\r\n                  \"enable\": false,\r\n                  \"speed\": 1,\r\n                  \"opacity_min\": 0.1,\r\n                  \"sync\": false\r\n                }\r\n              },\r\n              \"size\": {\r\n                \"value\": 14,\r\n                \"random\": true,\r\n                \"anim\": {\r\n                  \"enable\": false,\r\n                  \"speed\": 40,\r\n                  \"size_min\": 0.1,\r\n                  \"sync\": false\r\n                }\r\n              },\r\n              \"line_linked\": {\r\n                \"enable\": true,\r\n                \"distance\": 180,\r\n                \"color\": \"#26a69a\",\r\n                \"opacity\": 0.7,\r\n                \"width\": 1\r\n              },\r\n              \"move\": {\r\n                \"enable\": true,\r\n                \"speed\": 6,\r\n                \"direction\": \"none\",\r\n                \"random\": true,\r\n                \"straight\": false,\r\n                \"out_mode\": \"out\",\r\n                \"bounce\": false,\r\n                \"attract\": {\r\n                  \"enable\": false,\r\n                  \"rotateX\": 600,\r\n                  \"rotateY\": 1200\r\n                }\r\n              }\r\n            },\r\n            \"interactivity\": {\r\n              \"detect_on\": \"canvas\",\r\n              \"events\": {\r\n                \"onhover\": {\r\n                  \"enable\": true,\r\n                  \"mode\": \"bubble\"\r\n                },\r\n                \"onclick\": {\r\n                  \"enable\": false,\r\n                  \"mode\": \"push\"\r\n                },\r\n                \"resize\": true\r\n              },\r\n              \"modes\": {\r\n                \"grab\": {\r\n                  \"distance\": 400,\r\n                  \"line_linked\": {\r\n                    \"opacity\": 1\r\n                  }\r\n                },\r\n                \"bubble\": {\r\n                  \"distance\": 85,\r\n                  \"size\": 30,\r\n                  \"duration\": 1,\r\n                  \"opacity\": 8,\r\n                  \"speed\": 3\r\n                },\r\n                \"repulse\": {\r\n                  \"distance\": 200,\r\n                  \"duration\": 0.4\r\n                },\r\n                \"push\": {\r\n                  \"particles_nb\": 4\r\n                },\r\n                \"remove\": {\r\n                  \"particles_nb\": 2\r\n                }\r\n              }\r\n            },\r\n            \"retina_detect\": true\r\n          }}\r\n        />\r\n        <Container>\r\n          <Row>\r\n            <Col s={12} m={8} offset='m2'>\r\n              <div className=\"greeting\">\r\n                <h1><span>SimilarData</span> - умный поиск клиентов для&nbsp;бизнеса</h1>\r\n                <p>\r\n                  Поиск&nbsp;организаций, которым подходит ваш&nbsp;товар или услуга на&nbsp;основе искусственного&nbsp;интеллекта\r\n                </p>\r\n                <Collection>\r\n                  <CollectionItem>\r\n                    <FontAwesomeIcon icon={ faUserTie } size='2x' />Выбор из 8 млн ИП и юридических лиц\r\n                  </CollectionItem>\r\n                  <CollectionItem>\r\n                    <FontAwesomeIcon icon={ faDatabase } size='2x' />Надежная база данных\r\n                  </CollectionItem>\r\n                </Collection>\r\n                <NavLink className='btn btn-large' to='/try'>Попробовать</NavLink>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n      <section id='how-its-works'>\r\n        <Container>\r\n          <h2>Как это работает?</h2>\r\n          <Row>\r\n            <Col s={12} m={4}>\r\n              <div className=\"step\">\r\n                <div className=\"step-number\">1</div>\r\n                <FontAwesomeIcon icon={ faFileAlt } size='6x' />\r\n                <span>Создайте список своих клиентов (или потенциальных клиентов, если в только начинаете деятельность)<br></br><a href='/files/sample.xls' download>Пример</a></span>\r\n              </div>\r\n            </Col>\r\n            <Col s={12} m={4}>\r\n              <div className=\"step\">\r\n                <div className=\"step-number\">2</div>\r\n                <FontAwesomeIcon icon={ faFileUpload } size='6x' />\r\n                <span>Загрузите его на <NavLink to='/try'>странице</NavLink></span>\r\n              </div>\r\n            </Col>\r\n            <Col s={12} m={4}>\r\n              <div className=\"step\">\r\n                <div className=\"step-number\">3</div>\r\n                <FontAwesomeIcon icon={ faListOl } size='6x' />\r\n                <span>И получите список организаций, похожих на загруженные</span>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n      <section id='faq'>\r\n        <Container>\r\n          <h2>FAQ</h2>\r\n          <Collapsible accordion={ false }>\r\n            <CollapsibleItem\r\n              expanded={ false }\r\n              header='А сервис правда работает? '\r\n              icon={ <FontAwesomeIcon icon={ faCogs } size='lg' /> }\r\n              node='div'\r\n            >\r\n              Правда. Похожие алгоритмы используются крупнейшими банками страны для поиска клиентов\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n              expanded={ false }\r\n              header='Насколько хорошо работает алгоритм? Что такое \"похожая\" организация?'\r\n              icon={ <FontAwesomeIcon icon={ faQuestionCircle } size='lg' /> }\r\n              node='div'\r\n            >\r\n              Основное влияние оказывает ОКВЭД организации и регион ее расположения. Если ваши клиенты - банки из Москвы, или стоматологии из Санкт-Петербурга - сервис сработает идеально. Но если вы продаете нишевый товар неспециализированным магазинам - точность будет ниже, т.к. эти магазины не будут иметь выделяющего их ОКВЭД. Если вы продаете разные товары разным клиентам - лучше загрузите их разными списками, точность будет выше\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n              expanded={ false }\r\n              header='Список организаций это хорошо, а есть ли контакты ЛПР?'\r\n              icon={ <FontAwesomeIcon icon={ faAddressBook } size='lg' /> }\r\n              node='div'\r\n            >\r\n              Мы даем ссылку но профайл компании. В профайле указывается гендиректор и, зачастую, контакты организации\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n              expanded={ false }\r\n              header='А вы не украдете мою базу клиентов? Я вас не знаю'\r\n              icon={ <FontAwesomeIcon icon={ faThumbsDown } size='lg' /> }\r\n              node='div'\r\n            >\r\n              Вы загружаете файл анонимно, не идентифицируя себя или компанию, в которой работаете. Даже если бы мы хотели украсть, мы бы не знали, что это за список\r\n            </CollapsibleItem>\r\n            <CollapsibleItem\r\n              expanded={ false }\r\n              header='Как мне получить выгрузку по более, чем 100 организациям?'\r\n              icon={ <FontAwesomeIcon icon={ faUsers } size='lg' /> }\r\n              node='div'\r\n            >\r\n              Мы тестируем востребованность сервиса. Если он вам понравился и вам нужно больше - напишите нам <a href='mailto:giffok@yandex.ru'>giffok@yandex.ru</a>, мы обязательно поможем\r\n            </CollapsibleItem>\r\n          </Collapsible>\r\n        </Container>\r\n      </section>\r\n      <section id='try' className='accent'>\r\n        <Container>\r\n          <p>Найдите новых клиентов для вашего бизнеса прямо сейчас, это бесплатно</p>\r\n          <NavLink className='btn btn-large white black-text' to='/try'>Попробовать</NavLink>\r\n        </Container>\r\n      </section>\r\n      <section id='contacts'>\r\n        <Container>\r\n          <Row>\r\n            <Col s={ 12 } m={ 6 }>\r\n              <div className='contact'>\r\n                <a href=\"https://t.me/giffok\" target='_blank' rel='noreferrer'>{ <FontAwesomeIcon icon={ faTelegram } size='2x' /> } giffok</a>\r\n              </div>\r\n            </Col>\r\n            <Col s={ 12 } m={ 6 }>\r\n              <div className='contact'>\r\n                <a href='mailto:giffok@yandex.ru'>{ <FontAwesomeIcon icon={ faAt } size='2x' /> } giffok@yandex.ru</a>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { Collapsible, CollapsibleItem, Preloader, Modal, Button, Table } from 'react-materialize'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst NewClients = (props) => {\r\n  const { loads, deleteLoad } = props\r\n  \r\n  const [idLoadForDelete, setIdLoadForDelete] = useState(null)\r\n  \r\n  const openModal = (i) => {\r\n    setIdLoadForDelete(i)\r\n\r\n    // Открываем модальное окно\r\n    window.M.Modal.getInstance(document.getElementById('modal-confirm')).open()\r\n  }\r\n\r\n  return (\r\n    <div className='clients'>\r\n      <Modal\r\n        actions={[\r\n          <Button modal='close' node='button' className='btn' onClick={ () => deleteLoad(idLoadForDelete) }>Да</Button>,\r\n          <Button flat modal='close' node='button' waves='red' onClick={ () => setIdLoadForDelete(null) }>Нет</Button>\r\n        ]}\r\n        bottomSheet={ false }\r\n        fixedFooter={ false }\r\n        header='Подтверждение'\r\n        id='modal-confirm'\r\n      >\r\n        Вы уверены, что хотите удалить запись?\r\n      </Modal>\r\n      <Collapsible accordion={ false }>\r\n        {loads.map((load, index) => (\r\n          <CollapsibleItem\r\n            key={ load.id }\r\n            expanded={ index === 0 ? true : false }\r\n            header={\r\n              <div className='collapsible-header-wrapper'>\r\n                <span>Загрузка №{ load.id }</span>\r\n                {parseInt(load.status) !== 3 && parseInt(load.status) !== -1 ? \r\n                <Preloader\r\n                  active\r\n                  className='collapsible-loader'\r\n                  color='green'\r\n                  size='small'\r\n                /> : <div className='delete-load' onClick={ () => {\r\n                  window.M.Collapsible.getInstance(document.querySelector('.collapsible')).close(index)\r\n                  openModal(index)\r\n                } }>\r\n                    <FontAwesomeIcon icon={ faTrashAlt }></FontAwesomeIcon>\r\n                  </div>}\r\n              </div>}\r\n            node='div'\r\n          >\r\n            {load.clients && load.clients.length !== 0 ? \r\n              <Table\r\n                centered={ true }\r\n                responsive={ true }\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th data-field=\"row_number\">\r\n                      №\r\n                    </th>\r\n                    <th data-field=\"inn\">\r\n                      ИНН\r\n                    </th>\r\n                    <th data-field=\"priority\">\r\n                      Приоритет\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {load.clients.map(client => (\r\n                    <tr key={client.inn}>\r\n                      <td>\r\n                        { client.row_number }\r\n                      </td>\r\n                      <td>\r\n                        <a href={ 'https://sbis.ru/contragents/' + client.inn } target='_blank' rel='noreferrer'>{ client.inn }</a>\r\n                      </td>\r\n                      <td>\r\n                        { client.priority }\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            : <span>Нет записей...</span>}\r\n          </CollapsibleItem>\r\n        ))}\r\n      </Collapsible>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewClients\r\n","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\nconst DropZone = (props) => {\r\n  const { readExcel } = props\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    readExcel(acceptedFiles[0])\r\n  }, [readExcel])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: '.xlsx, .xls',\r\n    maxFiles: 1\r\n  })\r\n\r\n  return (\r\n    <div className=\"upload\">\r\n      <div { ...getRootProps({ className: 'dropzone' }) }>\r\n        <input { ...getInputProps() } />\r\n        { <span>Нажмите&nbsp;для&nbsp;выбора&nbsp;файла или перетащите&nbsp;его&nbsp;сюда (.xlsx,&nbsp;.xls)</span> }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropZone\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport XLSX from 'xlsx'\r\nimport sha256 from 'js-sha256'\r\nimport { Container, Row, Col, Preloader } from 'react-materialize'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faList } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// components\r\nimport NewClientsList from '../components/NewClients'\r\nimport DropZone from '../components/DropZone'\r\n\r\nexport const Try = () => {\r\n  const [loads, setLoads] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n  \r\n  let updater = null\r\n\r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      if (!file) {\r\n        window.M.toast({html: 'Неверный тип файла', displayLength: 5000, classes: 'red'})\r\n        return\r\n      }\r\n\r\n      const fileReader = new FileReader()\r\n      fileReader.readAsArrayBuffer(file)\r\n\r\n      fileReader.onload = (e) => {\r\n        const wb = XLSX.read(e.target.result, { type: 'buffer' }),\r\n          wsname = wb.SheetNames[0],\r\n          ws = wb.Sheets[wsname],\r\n          data = XLSX.utils.sheet_to_json(ws, { header: 1 })\r\n\r\n        let newData = []\r\n        \r\n        data.forEach(inn => {\r\n          if(Number.isInteger(inn[0]) && inn[0].toString().length < 21) newData.push([inn[0]])\r\n        })\r\n\r\n        resolve(newData)\r\n      }\r\n\r\n      fileReader.onerror = (error) => {\r\n        window.M.toast({html: 'Не удалось загрузить файл', displayLength: 5000, classes: 'red'})\r\n\r\n        reject(error)\r\n      }\r\n    })\r\n\r\n    promise.then((data) => {\r\n      window.M.toast({html: 'Файл успешно загружен', displayLength: 5000, classes: 'green'})\r\n      \r\n      getNewClients(data)\r\n    })\r\n  }\r\n\r\n  const getNewClients = async (uploadedClients) => {\r\n    try {\r\n      if (localStorage.getItem('userHash') === null) localStorage.setItem('userHash', sha256(new Date().toString()))\r\n\r\n      const userHash = localStorage.getItem('userHash')\r\n\r\n      getClients()\r\n\r\n      const response = await fetch('http://localhost:3001/api/v1/clients/new', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userHash, uploadedClients })\r\n      })\r\n\r\n      if (!response.ok) throw new Error('Something wrong')\r\n    } catch (error) {\r\n      console.error(error.message)\r\n    }\r\n  }\r\n\r\n  const getClients = async () => {\r\n    try {\r\n      const userHash = localStorage.getItem('userHash')\r\n\r\n      // Запускаем получение данных о новых клиентах каждые 3 секудны\r\n\r\n      const response = await fetch(`http://localhost:3001/api/v1/loads/${ userHash }`)\r\n      const { data } = await response.json()\r\n\r\n      setLoads(data.loads)\r\n      setIsLoading(true)\r\n\r\n      if (data.loads[0]) {\r\n        if (parseInt(data.loads[0].calc_status) !== 3) {\r\n          if (updater !== null) return\r\n\r\n          updater = setInterval(getClients, 3000)\r\n        }\r\n        else {\r\n          clearInterval(updater)\r\n          updater = null\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message)\r\n    }\r\n  }\r\n\r\n  const deleteLoad = async (i) => {\r\n    try {\r\n      const id = loads[i].id\r\n\r\n      await fetch(`http://localhost:3001/api/v1/loads/${ id }`, {\r\n        method: 'DELETE'\r\n      })\r\n      \r\n      setLoads(loads.filter(load => load.id !== id))\r\n\r\n      window.M.toast({html: `Загрузка №${id} успешно удалена`, displayLength: 5000, classes: 'green'})\r\n    } catch (error) {\r\n      console.error(error.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      getClients()\r\n    }\r\n\r\n    fetchData()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <Row>\r\n          <Col s={12} m={12} l={12} xl={12}>\r\n            <DropZone readExcel={ readExcel } />\r\n          </Col>\r\n          <Col s={12} m={12} l={12} xl={12}>\r\n            {isLoading ? \r\n              loads.length !== 0 ? \r\n                <NewClientsList loads={ loads } deleteLoad = { deleteLoad } /> \r\n              : <div className='not-found'>\r\n                <FontAwesomeIcon icon={ faList } size='7x' />\r\n                <span>Список пуст<br></br>Возможно Вы еще не пользовались нашим сервисом, время попробовать!<br></br><a href='/files/sample.xls' download>Пример списка для загрузки</a></span>\r\n              </div>\r\n            : <Preloader\r\n              active\r\n              className='loader'\r\n              color='green'\r\n              size='medium'\r\n            />}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Try\r\n","import React, { Fragment } from 'react'\nimport { BrowserRouter as Router, NavLink, Switch, Route } from 'react-router-dom'\nimport { Navbar, NavItem, SideNavItem } from 'react-materialize'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport './App.sass'\n\n// routers\nimport Home from './routers/Home'\nimport Try from './routers/Try'\n\nconst App = () => {\n  return (\n    <Router>\n      <header>\n        <Navbar\n          alignLinks='right'\n          brand={ <NavLink to='/'>SimilarData</NavLink> }\n          id='mobile-nav'\n          centerChildren\n          menuIcon={ <FontAwesomeIcon icon={ faBars } size='lg' /> }\n          fixed\n          sidenav={<Fragment>\n            <SideNavItem subheader>\n              Меню\n            </SideNavItem>\n            <SideNavItem divider />\n            {<li><NavLink to='/#how-its-works' className='sidenav-close'>\n              Как это работает?\n            </NavLink></li>}\n            {<li><NavLink to='/#faq' className='sidenav-close'>\n              FAQ\n            </NavLink></li>}\n            {<li><NavLink to='/#contacts' className='sidenav-close'>\n              Контакты\n            </NavLink></li>}\n            {<li><NavLink to='/try' className='sidenav-close btn'>\n              Попробовать сейчас\n            </NavLink></li>}\n          </Fragment>}\n        >\n          <NavItem href='/#how-its-works'>\n            Как это работает?\n          </NavItem>\n          <NavItem href='/#faq'>\n            FAQ\n          </NavItem>\n          <NavItem href='/#contacts'>\n            Контакты\n          </NavItem>\n        </Navbar>\n      </header>\n      \n      <Switch>\n        <Route exact path='/' component={ Home } />\n        <Route path='/try' component={ Try } />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// react-materializecss\nimport 'materialize-css/dist/css/materialize.min.css'\nimport 'materialize-css/dist/js/materialize.min.js'\n\n// шрифт Roboto\nimport 'typeface-roboto'\nimport './index.sass'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}